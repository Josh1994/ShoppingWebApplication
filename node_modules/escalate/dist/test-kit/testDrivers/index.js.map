{"version":3,"sources":["../../../test-kit/testDrivers/index.js"],"names":["listen","escalate","actions","filter","ctx","Recorder","record","reports","_","constant","oldConfig","config","loggerStrategy","debug","spyReporter","info","warn","error","panicStrategy","logThresholdStrategy","panicThresholdStrategy","level","context","params","push","Report"],"mappings":";;;;;;;;;;;;;;;;;;;SAOgBA,M,GAAAA,M;;KAHJC,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGL,UAASD,MAAT,CAAgBE,OAAhB,EAA8D;AAAA,MAArCC,MAAqC,uEAA3B;AAAA,UAAOC,OAAO,UAAd;AAAA,GAA2B;;AACpE,SAAO,IAAIC,QAAJ,GAAeC,MAAf,CAAsBJ,OAAtB,EAA+BC,MAA/B,EAAuCI,OAA9C;AACA;;KACKF,Q;AAEL,sBAAa;AAAA;;AACZ,QAAKE,OAAL,GAAe,EAAf;AACA;;;;0BAEML,O,EAAmC;AAAA;;AAAA,QAA1BC,MAA0B,uEAAjBK,EAAEC,QAAF,CAAW,IAAX,CAAiB;;AACzC;AACA,QAAIC,YAAYT,SAASU,MAAT,EAAhB;AACA,QAAI;AACH;AACAV,cAASU,MAAT,CAAgB;AACfC,sBAAgB;AAAA,cAAOT,OAAOC,GAAP,IAAc;AACpCS,eAAOC,YAAY,MAAKP,OAAjB,EAA0B,OAA1B,EAAmCH,GAAnC,CAD6B;AAEpCW,cAAMD,YAAY,MAAKP,OAAjB,EAA0B,MAA1B,EAAkCH,GAAlC,CAF8B;AAGpCY,cAAMF,YAAY,MAAKP,OAAjB,EAA0B,MAA1B,EAAkCH,GAAlC,CAH8B;AAIpCa,eAAOH,YAAY,MAAKP,OAAjB,EAA0B,OAA1B,EAAmCH,GAAnC;AAJ6B,QAAd,GAKnBM,UAAUE,cAAV,CAAyBR,GAAzB,CALY;AAAA,OADD;AAOfc,qBAAe;AAAA,cAAOf,OAAOC,GAAP,IAAcU,YAAY,MAAKP,OAAjB,EAA0B,OAA1B,EAAmCH,GAAnC,CAAd,GAAwDM,UAAUQ,aAAV,CAAwBd,GAAxB,CAA/D;AAAA,OAPA;AAQfe,4BAAsB;AAAA,cAAOhB,OAAOC,GAAP,IAAc,OAAd,GAAwBM,UAAUS,oBAAV,CAA+Bf,GAA/B,CAA/B;AAAA,OARP;AASfgB,8BAAwB;AAAA,cAAOjB,OAAOC,GAAP,IAAc,OAAd,GAAwBM,UAAUU,sBAAV,CAAiChB,GAAjC,CAA/B;AAAA;AATT,MAAhB;AAWA;AACAF;AACA;AACA,KAhBD,SAgBU;AACTD,cAASU,MAAT,CAAgBD,SAAhB;AACA;AACD,WAAO,IAAP;AACA;;;;;;AAGF,UAASI,WAAT,CAAqBP,OAArB,EAA8Bc,KAA9B,EAAqCC,OAArC,EAA6C;AAC5C,SAAO;AAAA,qCAAIC,MAAJ;AAAIA,UAAJ;AAAA;;AAAA,UAAehB,QAAQiB,IAAR,CAAa,IAAIC,MAAJ,CAAWJ,KAAX,EAAkBC,OAAlB,EAA2BC,MAA3B,CAAb,CAAf;AAAA,GAAP;AACA;;KAEYE,M,WAAAA,M,GACZ,gBAAaJ,KAAb,EAAoBC,OAApB,EAA6BC,MAA7B,EAAoC;AAAA;;AACnC,OAAKF,KAAL,GAAaA,KAAb;AACA,OAAKC,OAAL,GAAeA,OAAf;AACA,OAAKC,MAAL,GAAcA,MAAd;AACA,E","file":"index.js","sourcesContent":["/**\n * Created by amira on 9/8/15.\n */\n\nimport * as escalate from '../../src/index';\n\n\nexport function listen(actions, filter = (ctx => ctx != 'escalate')) {\n\treturn new Recorder().record(actions, filter).reports;\n}\nclass Recorder{\n\n\tconstructor(){\n\t\tthis.reports = [];\n\t}\n\n\trecord(actions, filter = _.constant(true)){\n\t\t// save old config\n\t\tvar oldConfig = escalate.config();\n\t\ttry {\n\t\t\t// spy on escalate\n\t\t\tescalate.config({\n\t\t\t\tloggerStrategy: ctx => filter(ctx) ? {\n\t\t\t\t\tdebug: spyReporter(this.reports, 'debug', ctx),\n\t\t\t\t\tinfo: spyReporter(this.reports, 'info', ctx),\n\t\t\t\t\twarn: spyReporter(this.reports, 'warn', ctx),\n\t\t\t\t\terror: spyReporter(this.reports, 'error', ctx)\n\t\t\t\t} : oldConfig.loggerStrategy(ctx),\n\t\t\t\tpanicStrategy: ctx => filter(ctx) ? spyReporter(this.reports, 'fatal', ctx) : oldConfig.panicStrategy(ctx),\n\t\t\t\tlogThresholdStrategy: ctx => filter(ctx) ? 'debug' : oldConfig.logThresholdStrategy(ctx),\n\t\t\t\tpanicThresholdStrategy: ctx => filter(ctx) ? 'fatal' : oldConfig.panicThresholdStrategy(ctx)\n\t\t\t});\n\t\t\t// run actions\n\t\t\tactions();\n\t\t\t// restore config\n\t\t} finally {\n\t\t\tescalate.config(oldConfig);\n\t\t}\n\t\treturn this;\n\t}\n}\n\nfunction spyReporter(reports, level, context){\n\treturn (...params) => reports.push(new Report(level, context, params));\n}\n\nexport class Report{\n\tconstructor (level, context, params){\n\t\tthis.level = level;\n\t\tthis.context = context;\n\t\tthis.params = params;\n\t}\n}\n\n\n"]}