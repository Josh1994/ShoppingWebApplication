{"version":3,"sources":["../../../test-kit/matchers/index.js"],"names":["chai","Assertion","addMethod","reportImpl","context","level","params","reports","_obj","paramsCandidates","_","map","filter","r","matchField","assert","length","matchArrayOfParamsByArrayOfMatchers","JSON","stringify","reported","matcher","RegExp","test","matchParamsByArray","reportedParams","matcherArr","every","some","param","reportedParamsArr","isArray"],"mappings":";;;;;;;;;;;;;;;;;;;mBA2Be,UAAUA,IAAV,EAAgB;AAC9B;;;AAGAA,OAAKC,SAAL,CAAeC,SAAf,CAAyB,QAAzB,EAAmC,SAASC,UAAT,OAA8C;AAAA,OAAzBC,OAAyB,QAAzBA,OAAyB;AAAA,OAAhBC,KAAgB,QAAhBA,KAAgB;AAAA,OAATC,MAAS,QAATA,MAAS;;AAChF,OAAIC,UAAU,mBAAO,KAAKC,IAAZ,CAAd;AACA,OAAIC,mBAAmBC,EAAEC,GAAF,CAAMJ,QAAQK,MAAR,CAAe,UAACC,CAAD;AAAA,WAAO,CAAC,CAACT,OAAD,IAAYU,WAAWD,EAAET,OAAb,EAAsBA,OAAtB,CAAb,MAAiD,CAACC,KAAD,IAAUS,WAAWD,EAAER,KAAb,EAAoBA,KAApB,CAA3D,CAAP;AAAA,IAAf,CAAN,EAAqH,QAArH,CAAvB;AACA,QAAKU,MAAL,CAAYN,iBAAiBO,MAAjB,IAA2BC,oCAAoCR,gBAApC,EAAsDH,MAAtD,CAAvC,wEAEkBF,OAFlB,4BAGgBC,KAHhB,6BAIiB,mCAAIC,MAAJ,CAJjB,oBAKQY,KAAKC,SAAL,CAAeZ,OAAf,CALR,qDAMkDW,KAAKC,SAAL,CAAeZ,OAAf,CANlD;AAQA,GAXD;AAYA,E;;KAxCWG,C;;;;;;;;;;;;;;;;;;;;;;;;;;;AAKZ,UAASI,UAAT,CAAoBM,QAApB,EAA8BC,OAA9B,EAAsC;AACrC,MAAIA,OAAJ,EAAY;AACX,UAAOA,YAAYD,QAAZ,IAAwBF,KAAKC,SAAL,CAAeE,OAAf,MAA4BH,KAAKC,SAAL,CAAeC,QAAf,CAApD,IAAiFC,mBAAmBC,MAAnB,IAA6BD,QAAQE,IAAR,CAAa,KAAKH,QAAlB,CAArH;AACA,GAFD,MAEO,OAAO,CAACA,QAAR;AACP,E,CAZD;;;;;AAcA,UAASI,kBAAT,CAA4BC,cAA5B,EAA4CC,UAA5C,EAAwD;AACvD,SAAOhB,EAAEiB,KAAF,CAAQD,UAAR,EAAoB;AAAA,UAAWhB,EAAEkB,IAAF,CAAOH,cAAP,EAAuB;AAAA,WAASX,WAAWe,KAAX,EAAkBR,OAAlB,CAAT;AAAA,IAAvB,CAAX;AAAA,GAApB,CAAP;AACA;;AAED,UAASJ,mCAAT,CAA6Ca,iBAA7C,EAAgEJ,UAAhE,EAA2E;AAC1E,MAAI,CAACA,UAAL,EAAgB;AACfA,gBAAa,EAAb;AACA,GAFD,MAEO,IAAG,CAAChB,EAAEqB,OAAF,CAAUL,UAAV,CAAJ,EAA0B;AAChCA,gBAAa,CAACA,UAAD,CAAb;AACA;AACD,SAAOhB,EAAEkB,IAAF,CAAOE,iBAAP,EAA0B;AAAA,UAAkBN,mBAAmBC,cAAnB,EAAmCC,UAAnC,CAAlB;AAAA,GAA1B,CAAP;AACA","file":"index.js","sourcesContent":["/**\n * Created by amira on 6/8/15.\n */\nimport * as _ from 'lodash';\nimport sjs from 'serialize-javascript';\nimport {listen, Report} from '../testDrivers/index';\n\n\nfunction matchField(reported, matcher){\n\tif (matcher){\n\t\treturn matcher === reported || JSON.stringify(matcher) === JSON.stringify(reported) || (matcher instanceof RegExp && matcher.test('' + reported));\n\t} else return !reported;\n}\n\nfunction matchParamsByArray(reportedParams, matcherArr) {\n\treturn _.every(matcherArr, matcher => _.some(reportedParams, param => matchField(param, matcher)));\n}\n\nfunction matchArrayOfParamsByArrayOfMatchers(reportedParamsArr, matcherArr){\n\tif (!matcherArr){\n\t\tmatcherArr = [];\n\t} else if(!_.isArray(matcherArr)){\n\t\tmatcherArr = [matcherArr];\n\t}\n\treturn _.some(reportedParamsArr, reportedParams => matchParamsByArray(reportedParams, matcherArr));\n}\n\nexport default function (chai) {\n\t/**\n\t * matches a report that is generated by the function under test\n\t */\n\tchai.Assertion.addMethod(\"report\", function reportImpl({context, level, params}) {\n\t\tvar reports = listen(this._obj);\n\t\tvar paramsCandidates = _.map(reports.filter((r) => (!context || matchField(r.context, context)) && (!level || matchField(r.level, level))), 'params');\n\t\tthis.assert(paramsCandidates.length && matchArrayOfParamsByArrayOfMatchers(paramsCandidates, params),\n\t\t\t`Expected #{this} to report, but it didn't.\\n\nexpected context: ${context}\\n\nexpected level: ${level}\\n\nexpected params: ${sjs(params)}\\n\nactual: ${JSON.stringify(reports)}`,\n\t\t\t`Expected #{this} not to report, but it did.\\n ${JSON.stringify(reports)}`\n\t\t);\n\t});\n}"]}