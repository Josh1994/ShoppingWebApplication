{"version":3,"sources":["../../src/index.js"],"names":["getMailBox","config","_","moduleConfig","loggerStrategy","ctx","DEFAULT_LOGGER","panicStrategy","defaultPanic","logThresholdStrategy","panicThresholdStrategy","activateTimers","mailboxes","levels","Object","freeze","DEBUG","INFO","WARN","ERROR","FATAL","levelIdx","debug","info","warn","error","fatal","context","mailBox","Mailbox","postOfficeFactory","timers","startTimer","id","undefined","Date","now","endTimer","timeTaken","push","postOffice","level","levelIndex","Error","params","post","isActive","configParams","MAILBOX","keys","defaults","cloneDeep","forEach","e","join","stack","split","splice","PostOffice","logger","panic","logThreshold","panicThreshold","indexOf","msg"],"mappings":"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","file":"index.js","sourcesContent":["/**\n * Created by amira on 2/8/15.\n */\nimport * as _ from 'lodash';\n// TODO nice logger https://github.com/visionmedia/debug\n// by default, ignore context and supply preset values\nvar moduleConfig = {\n\tloggerStrategy : (ctx) => DEFAULT_LOGGER,\n\tpanicStrategy :  (ctx) => defaultPanic,\n\tlogThresholdStrategy :  (ctx) => 'info' ,\n\tpanicThresholdStrategy :  (ctx) => 'error',\n\tactivateTimers: false\n};\n\nvar mailboxes = [];\nexport const levels = Object.freeze(['debug', 'info', 'warn', 'error', 'fatal']);\nconst DEBUG= 0, INFO= 1, WARN= 2, ERROR= 3, FATAL=4;\nconst levelIdx = Object.freeze({\n\tdebug:DEBUG,\n\tinfo:INFO,\n\twarn:WARN,\n\terror:ERROR,\n\tfatal:FATAL\n});\nexport function getMailBox(context){\n\tvar mailBox = new Mailbox(postOfficeFactory(context))\n\t\n\tif(moduleConfig.activateTimers) {\n\t\tconst timers = {};\n\t\tmailBox.startTimer = function(id){\n\t\t\tif(timers[id]!==undefined){\n\t\t\t\tthis.warn('Escalate timer already started '+id);\n\t\t\t}else{\n\t\t\t\ttimers[id] = Date.now();\n\t\t\t}\n\t\t}\n\t\tmailBox.endTimer = function(id){\n\t\t\tif(timers[id]===undefined){\n\t\t\t\tthis.warn('Escalate timer not started '+id);\n\t\t\t}else{\n\t\t\t\tconst timeTaken =  Date.now() - timers[id];\n\t\t\t\tthis.info('timer '+id+' took '+timeTaken,'timer',id,timeTaken);\n\t\t\t\tdelete timers[id];\n\t\t\t}\n\t\t}\n\t}\n\tmailboxes.push({mailBox, context});\n\treturn mailBox;\n}\nclass Mailbox {\n\tconstructor(postOffice){\n\t\tthis.timers = {};\n\t\tthis.postOffice = postOffice;\n\t}\n\tpost(level, ...params){\n\t\tvar levelIndex = levelIdx[level];\n\t\tif (typeof levelIndex === 'undefined') {\n\t\t\tthrow new Error(`log level unknown : ${level}`);\n\t\t} else {\n\t\t\tthis.postOffice.post(levelIndex, ...params);\n\t\t}\n\t}\n\tdebug(...params){\n\t\tthis.postOffice.post(DEBUG, ...params);\n\t}\n\tinfo(...params){\n\t\tthis.postOffice.post(INFO, ...params);\n\t}\n\twarn(...params){\n\t\tthis.postOffice.post(WARN, ...params);\n\t}\n\terror(...params){\n\t\tthis.postOffice.post(ERROR, ...params);\n\t}\n\tfatal(...params){\n\t\tthis.postOffice.post(FATAL, ...params);\n\t}\n\tstartTimer(id){\n\t}\n\tendTimer(id){\n\t}\n\tlevelCheck(level){\n\t\tvar levelIndex = levelIdx[level];\n\t\treturn this.postOffice.isActive(levelIndex);\n\t}\n\tdebugCheck(){\n\t\treturn this.postOffice.isActive(DEBUG);\n\t}\n\tinfoCheck(){\n\t\treturn this.postOffice.isActive(INFO);\n\t}\n\twarnCheck(){\n\t\treturn this.postOffice.isActive(WARN);\n\t}\n\terrorCheck(){\n\t\treturn this.postOffice.isActive(ERROR);\n\t}\n\tfatalCheck(){\n\t\treturn true;\n\t}\n}\n\nexport function config(configParams){\n\tif (configParams) {\n\t\tMAILBOX.warn(`configuration changes : ${Object.keys(configParams)}`);\n\t\tmoduleConfig = _.defaults({},  _.cloneDeep(configParams),moduleConfig);\n\t\t// replace old strategies;\n\t\tmailboxes.forEach(e => {\n//\t\tMAILBOX.debug(`applying new configuration to ${JSON.stringify(e.context)}`);\n\t\t\te.mailBox.postOffice = postOfficeFactory(e.context);\n\t\t});\n\t}\n\treturn _.cloneDeep(moduleConfig);\n}\n\nconst DEFAULT_LOGGER = {\n\terror : (...params) => console.error(...params),\n\twarn : (...params) => console.warn(...params),\n\tinfo : (...params) => console.info(...params),\n\tdebug : (...params) => console.info(...params) // some environments don't have console.debug\n};\n\nfunction defaultPanic(...params){\n\tvar error = new Error(params.join(' '));\n\terror.params = params;\n\tif (error.stack) {\n\t\terror.stack = error.stack.split('\\n');\n\t\terror.stack.splice(1, 3);\n\t\terror.stack = error.stack.join('\\n');\n\t}\n\tthrow error;\n}\n\n\n\nfunction postOfficeFactory(context) {\n\treturn new PostOffice(\n\t\tmoduleConfig.loggerStrategy(context),\n\t\tmoduleConfig.panicStrategy(context),\n\t\tmoduleConfig.logThresholdStrategy(context),\n\t\tmoduleConfig.panicThresholdStrategy(context)\n\t);\n}\n\nclass PostOffice {\n\tconstructor(logger, panic, logThreshold, panicThreshold) {\n\t\tthis.logger = logger;\n\t\tthis.panic = panic;\n\t\tthis.logThreshold = levels.indexOf(logThreshold);\n\t\tthis.panicThreshold = levels.indexOf(panicThreshold);\n\t\tif (this.panicThreshold < this.logThreshold) {\n\t\t\tvar msg = `log threshold ${logThreshold} is higher than panic threshold ${panicThreshold}`;\n\t\t\tif (MAILBOX){\n\t\t\t\tMAILBOX.error(msg);\n\t\t\t} else {\n\t\t\t\tthrow new Error(msg);\n\t\t\t}\n\t\t}\n\t}\n\tisActive(levelIndex){\n\t\treturn levelIndex >= this.logThreshold;\n\t}\n\tpost(levelIndex, ...params){\n\t\t\n\t\tif (this.isActive(levelIndex)){\n\t\t\tif (levelIndex >= this.panicThreshold) {\n\t\t\t\tthis.panic(...params);\n\t\t\t} else {\n\t\t\t\tthis.logger[levels[levelIndex]](...params);\n\t\t\t}\n\t\t}\n\t}\n}\n\nconst MAILBOX = getMailBox('escalate');"]}