"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var lodash_1 = require("lodash");
var MapWrapperOverDictionary = (function () {
    function MapWrapperOverDictionary(ref, mapper) {
        this.mapper = mapper;
        Object.defineProperty(this, "ref", {
            enumerable: false,
            configurable: true,
            get: function () {
                return ref();
            }
        });
    }
    Object.defineProperty(MapWrapperOverDictionary.prototype, "ref", {
        get: function () { return {}; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MapWrapperOverDictionary.prototype, "size", {
        get: function () {
            return this.keys().length;
        },
        enumerable: true,
        configurable: true
    });
    MapWrapperOverDictionary.prototype.forEach = function (callbackfn, thisArg) {
        var _this = this;
        lodash_1.forEach(this.ref, function (value, key, map) { return callbackfn(_this.mapper(value, key), key, _this); });
    };
    MapWrapperOverDictionary.prototype.get = function (key) {
        return this.mapper(this.ref[key], key);
    };
    MapWrapperOverDictionary.prototype.has = function (key) {
        return this.ref.hasOwnProperty(key);
    };
    MapWrapperOverDictionary.prototype.keys = function () {
        var data = this.ref;
        return Object.keys(data).filter(function (k) { return data.hasOwnProperty(k); });
    };
    MapWrapperOverDictionary.prototype.entries = function () {
        var _this = this;
        return lodash_1.map(this.ref, function (value, key, map) { return [key, _this.mapper(value, key)]; });
    };
    MapWrapperOverDictionary.prototype.values = function () {
        var _this = this;
        return lodash_1.map(this.ref, function (value, key, map) { return _this.mapper(value, key); });
    };
    return MapWrapperOverDictionary;
}());
exports.MapWrapperOverDictionary = MapWrapperOverDictionary;
//# sourceMappingURL=map-wrapper.js.map