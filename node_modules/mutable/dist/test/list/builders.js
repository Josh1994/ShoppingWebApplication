"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var _ = require("lodash");
var mu = require("../../src");
var test_drivers_1 = require("../../test-kit/test-drivers");
var either = mu.either;
exports.UserType = test_drivers_1.aDataTypeWithSpec({
    name: mu.String.withDefault(''),
    age: mu.Number.withDefault(10)
}, 'User');
exports.AddressType = test_drivers_1.aDataTypeWithSpec({
    address: mu.String.withDefault(''),
    code: mu.Number.withDefault(10)
}, 'Address');
exports.UserWithAddressType = test_drivers_1.aDataTypeWithSpec({
    user: exports.UserType,
    address: exports.AddressType
}, 'UserWithAddress');
exports.VeryCompositeContainer = test_drivers_1.aDataTypeWithSpec({
    child1: exports.UserWithAddressType
}, 'VeryCompositeContainer');
function aStringList(optionalArr) {
    return mu.List.of(mu.String).create(optionalArr || ["John", "Paul", "George", "Ringo"]);
}
exports.aStringList = aStringList;
function aNumberList(optionalArr) {
    return mu.List.of(mu.Number).create(optionalArr || [1, 2]);
}
exports.aNumberList = aNumberList;
function aNumberStringList(optionalArr) {
    return mu.List.of(either(mu.Number, mu.String)).create(optionalArr || [1, 'ho']);
}
exports.aNumberStringList = aNumberStringList;
function anEmptyList() {
    return aNumberList([]);
}
exports.anEmptyList = anEmptyList;
function aUserList(optionalArr) {
    return mu.List.of(exports.UserType).create(optionalArr || [{}, { name: 'yossi' }]);
}
exports.aUserList = aUserList;
function aUserWithAddressTypeList(optionalArr) {
    return mu.List.of(exports.UserWithAddressType).create(optionalArr || [{}, { name: 'yossi' }]);
}
exports.aUserWithAddressTypeList = aUserWithAddressTypeList;
function aUserOrAddressList(optionalArr) {
    return mu.List.of(either(exports.UserType, exports.AddressType)).create(optionalArr || [{}, { name: 'yossi' }]);
}
exports.aUserOrAddressList = aUserOrAddressList;
function a2dUserWithAddressTypeList(optionalArr) {
    return mu.List.of(mu.List.of(exports.UserWithAddressType)).create(optionalArr || [[{}], [{ name: 'yossi' }]]);
}
exports.a2dUserWithAddressTypeList = a2dUserWithAddressTypeList;
function aVeryCompositeContainerList(optionalArr) {
    return mu.List.of(exports.VeryCompositeContainer).create(optionalArr || [{}, { child1: { user: { name: 'yossi' } } }]);
}
exports.aVeryCompositeContainerList = aVeryCompositeContainerList;
var exported = { UserType: exports.UserType, AddressType: exports.AddressType, UserWithAddressType: exports.UserWithAddressType, aStringList: aStringList, aNumberList: aNumberList, aNumberStringList: aNumberStringList, anEmptyList: anEmptyList, aUserList: aUserList, aUserWithAddressTypeList: aUserWithAddressTypeList, aUserOrAddressList: aUserOrAddressList, aVeryCompositeContainerList: aVeryCompositeContainerList, a2dUserWithAddressTypeList: a2dUserWithAddressTypeList };
function asReadOnly() {
    return _.mapValues(exported, function (prop) {
        if (prop.id) {
            return prop;
        }
        else {
            return _.flow(prop, function (list) { return list.$asReadOnly(); });
        }
    });
}
exports.asReadOnly = asReadOnly;
//# sourceMappingURL=builders.js.map